## @file
# Global Project Configuration File
#

#------------------------------------------------------------------------------
# Global definitions
#------------------------------------------------------------------------------

##
# Defines import library target for the given DLL.
# @param 1 DLL target name.
# @param 2 .def file (defaults to <param 1>.def).
# @param 3 .def file for debug (defaults to <param 2>).
#
define odin_implib
    $(eval $(def_odin_implib))
endef

define def_odin_implib
    LIBRARIES += $(1)_imp
    $(1)_imp_TEMPLATE = OdinCxx
    $(1)_imp_NAME     = $(1)
ifeq ($(3),)
    $(1)_imp_SOURCES  = $(if $(2),$(2),$(1).def)
else
    $(1)_imp_SOURCES.release = $(if $(2),$(2),$(1).def)
    $(1)_imp_SOURCES.debug   = $(3)
endif
endef

##
# Shortcut to $(call odin_implib, <param 1>, <param 1>.def, <param 1>dbg.def).
# @param 1 DLL target name.
#
define odin_implib_2
    $(call odin_implib, $(1), $(1).def, $(1)dbg.def)
endef

# Handler for Wine RC (.orc) source files
KBUILD_SRC_HANDLERS += .orc:def_src_handler_wrc
define def_src_handler_wrc
local type := WRC
 $(kb-src-one 2)
endef

# Override handler for .asm files to compile them with the MASM-compilant tool
KBUILD_SRC_HANDLERS := .asm:def_src_handler_masm $(KBUILD_SRC_HANDLERS)
define def_src_handler_masm
local type := $(if $(TOOL_$(tool)_COMPILE_MASM_CMDS),MASM,AS)
 $(kb-src-one 2)
endef

#------------------------------------------------------------------------------
# Tools
#------------------------------------------------------------------------------

# Add support for Wine RC to the GCC compiler
TOOL_GXX3OMF_WRC                = $(PATH_STAGE_BIN)/winerc.exe
TOOL_GXX3OMF_WRCOBJSUFF         = $(TOOL_GXX3OMF_COBJSUFF)
TOOL_GXX3OMF_COMPILE_WRC_OUTPUT = $(outbase).orc.s
TOOL_GXX3OMF_COMPILE_WRC_DEPEND =
TOOL_GXX3OMF_COMPILE_WRC_DEPORD =
define TOOL_GXX3OMF_COMPILE_WRC_CMDS
	$(QUIET)$(TOOL_GXX3OMF_WRC) -s \
		$(flags) $(addprefix -I, $(subst /,\\,$(incs))) $(addprefix -D, $(defs))\
		$(subst /,\\,$(abspath $(source))) \
		-o $(TOOL_GXX3OMF_COMPILE_WRC_OUTPUT)
	$(QUIET)$(TOOL_GXX3OMF_CC) -E \
		$(flags) $(addprefix -I, $(incs)) -I . $(addprefix -D, $(defs))\
		-x c $(abspath $(source)) \
		| $(DEP_PRE) -f -s -o $(dep) -t $(obj) -
	$(subst $(source),$(TOOL_GXX3OMF_COMPILE_WRC_OUTPUT),$(TOOL_GXX3OMF_COMPILE_AS_CMDS))
endef

TOOL_GXX3OMF_MASM                   = $(firstword $(PATH_TOOL_ALP) alp.exe)
TOOL_GXX3OMF_MASMFLAGS              = -Mb
TOOL_GXX3OMF_COMPILE_MASM_OUTPUT    = $(outbase).lst
TOOL_GXX3OMF_COMPILE_MASM_DEPEND    =
TOOL_GXX3OMF_COMPILE_MASM_DEPORD    =
define TOOL_GXX3OMF_COMPILE_MASM_CMDS
	$(QUIET)$(TOOL_GXX3OMF_MASM)\
		$(flags) $(addsuffix /,$(addprefix -I:, $(incs))) $(addprefix -D:, $(defs))\
		$(source)\
		-Fl:$(outbase).lst\
		-Fd:$(dep)\
		-Fo:$(obj)
endef

#------------------------------------------------------------------------------
# Common libraries referenced by components
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
# General Stuff
#------------------------------------------------------------------------------

TEMPLATE_OdinCxx            = Odin C/C++ sources
TEMPLATE_OdinCxx_TOOL       = GXX3OMF
TEMPLATE_OdinCxx_INCS       = $(PATH_ROOT)/include/win $(PATH_ROOT)/include $(PATH_ROOT)/include/incl_gcc
TEMPLATE_OdinCxx_DEFS       = __WIN32OS2__ __WINE__ __i386__ TCPV40HDRS COMCTL32UNDOC

TEMPLATE_OdinCRT            = OdinCRT library
TEMPLATE_OdinCRT_EXTENDS    = OdinCxx
TEMPLATE_OdinCRT_EXTENDS_BY	= overriding
TEMPLATE_OdinCRT_DEFS       = __WIN32OS2__ __WINE__ __i386__

TEMPLATE_OdinCRT            = Win32 application
TEMPLATE_OdinCRT_EXTENDS    = OdinCxx
TEMPLATE_OdinCRT_EXTENDS_BY	= overriding
TEMPLATE_OdinCRT_DEFS       = __WIN32OS2__ __i386__

TEMPLATE_OdinCxxDLL             = Odin C/C++ DLL
TEMPLATE_OdinCxxDLL_EXTENDS     = OdinCxx
TEMPLATE_OdinCxxDLL_EXTENDS_BY	= overriding
TEMPLATE_OdinCxxDLL_LIBS        = $(TEMPLATE_OdinCxx_LIBS) $(INSTTARGET_initdll)

#------------------------------------------------------------------------------
# GCC Stuff
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
# Other Stuff
#------------------------------------------------------------------------------

#
# Include a site-specific config for local overrides
#
ifndef LOCALCFG
 LOCALCFG := $(wildcard $(PATH_ROOT)/LocalConfig.kmk)
 ifneq ($(LOCALCFG),)
  include $(LOCALCFG)
 endif
endif
