:userdoc.:title.Reporting bugs
:docprof toc=123.
.***************************************************
.*** IPF-Generator Version 0.82 for Framework IV ***
.***************************************************

:h1 res=100.Reporting Odin bugs

:font facename='Default' size=0x0.:p.To make our job easier when dealing with reports of failures to run 
certain apps&comma. there's a standard form to report bug. (see below)

:p.Some remarks&colon.
:ul compact.
:li.always try the debug build with the application unless only only the release
build shows the problem.
:li.make sure you have installed Odin properly (WarpIN)
:li.pe.exe is the recommended way to run windows applications; remove win32k.sys
from your config.sys (note that WarpIN does *not* install win32k.sys)
:li.use a recent daily build. Bug reports with ancient (> 1 week old) builds are
not very useful. the problem you report might no longer be present
:li.always send these bug reports to the odinusers mailinglist; not directly to
the developers. (so others can respond if the problem is old or already
fixed) (odinusers@yahoogroups.com; go to www.yahoogroups.com to subscribe)
:eul.
:p.Sometimes the small part of the logfile isn't enough for us to determine 
where the problem lies.
:p.In that case&comma. we'll ask you to mail us the entire file. (zipped)
So please *do not* send big logfiles to the mailinglist!

:h1 res=200.Generating useful logfiles

:font facename='Default' size=0x0.:p.To enable logging in the debug build&comma. add the following environment variable&colon.

:p.:font facename='Courier' size=14x8.         SET WIN32LOG_ENABLED=1:font facename='Default' size=0x0.

:p.This turns on logging for all debug dlls.
:p.However&comma. this can result in huge logfiles. To reduce the size&comma. use release
builds of dlls that are not relevant to the problem you're seeing.
The general rule is that usually only the logging information generated by
gdi32&comma. kernel32 and user32 is important.
:p.Use the release build of gdi32 if the problem you're seeing isn't related
to painting. (gdi32 generates a *lot* of logging information)

:p.Logging.txt contains information on how to selectively enable&slr.disable logging.
Doing this requires some knowledge about the layout of the Odin source tree 
and what each source file does.

:h1 res=300.Useful tips

:font facename='Default' size=0x0.:p.Crashes are always easy to locate in logfiles (search for 'Exception Information')&comma. 
but improper behaviour isn't.
:p.In the system menu (top left button of a window)&comma. there's a menu item called
'Put mark in debug log'. Selecting this item puts the line 'Mark requested 
by user' in the log. 
:p.This can be useful e.g. if a window is resized improperly after you click
on a button. To make it easy for us to locate the right log lines&comma. you
should select the 'Put mark in debug log' menu item and then click on the
button that causes the problem.



:p.:link reftype=fn refid=IPFGen.About IPF-Generator:elink.
:fn id=IPFGen.:lines.:hp8.:font facename='Tms Rmn' size=24x14.IPF-Generator Version 0.82:font facename=Helv size=8x4.alpha:ehp8.:font facename='Tms Rmn' size=24x14.
:font facename=Helv size=8x4.Another fine user developed piece of software
written in FRED for good, old Framework IV.
(c) by Herwig Bauernfeind. All rights reserved.
:elines.:p.IPF-Generator is (1) a printer driver and (2) a bound set of macros, that create the IPF-Tags (not all by now), translate Framework container structures to .IPF structures and call the IBM IPF-Compiler at last.
:p.Viewers available for OS/2-PM, OS/2-Text, Win16, DOS-Text.:efn.
:euserdoc.
