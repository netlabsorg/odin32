# $Id: pdwin32.wat.rel,v 1.5 2000-11-21 04:39:20 bird Exp $
# ODIN / win32os2 Project
#
# RELEASE makefile for the Watcom C/C++ compiler environment.
#
#


#
# Library macros.
#
SOMLIB   = somtk.lib
RTLLIB   = clib3r.lib
RTLLIB_O = clib3r.lib
DLLENTRY = $(PDWIN32_LIB)\dllentry_watcom.obj
ODINCRT  = odincrtd


#
# Object directory.
#
OBJDIR   = .\bin\release.wat


#
# Tools
#
CXX    = WPP386
CC     = WCC386
AS     = alp
LD     = wlink
LD2    = $(LD)
IMPLIB = implib
ILIB   = ilib
RC     = $(PDWIN32_TOOLS)\wrc
OS2RC  = rc


#
# Tool Flags
#
ASFLAGS          = -Mb -Sc -Sv:ALP
IMPLIBFLAGS      = /nologo
ILIBFLAGS        = /quiet /nologo
RCFLAGS          = -s -I. -I$(%WATCOM)\include
OS2RCFLAGS       = -r -n
OS2RCLFLAGS      = -x2 -n


#
# Watcom compiler flags:
# w4        warning level 4
# wcd=726   disable warning 726 (unreferened local variable or parameter)
# e25       error limit
# d2        generate symbolic debug information
# od        no optimizations
# bm        multithreaded environment
# ez        generated OMF objects
# mf        flat memory model
# 5r        pentium register calling convention
# br        use dll for runtime library functions
# bt=os2    target os = OS/2
# zq        operate quietly (display only errors)
# fp5       optimize floating-point for pentium
# fpi87     inline fpu instructions
# hw        generate Watcom debug information
# xd        disable exception handling (default)
# xs        enable exception handling
CXXEXCEPTIONS    = -xs
!ifndef STATIC_CRT
DLLRTL = -br
!endif
CFLAGS           = -w4 -wcd=726 -e25 -od -bm -mf -5r -bt=os2 -zq -fp5 -fpi87 -s     $(DLLRTL)
CXXFLAGS         = -w4 -wcd=726 -e25 -od -bm -mf -5r -bt=os2 -zq -fp5 -fpi87 -s -xd $(DLLRTL)
CXXFLAGS_ODINCRT = -w4 -wcd=726 -e25 -od -bm -mf -5r -bt=os2 -zq -fp5 -fpi87 -s -xd
CFLAGS_WIN32APP  = -w4 -wcd=726 -e25 -od -bm -mf -5r -bt=os2 -zq -fp5 -fpi87
CXXFLAGS_WIN32APP= -w4 -wcd=726 -e25 -od -bm -mf -5r -bt=os2 -zq -fp5 -fpi87
CINCLUDES        = -i$(%WATCOM)\h -i$(PDWIN32_INCLUDE)\Win -i. -i$(PDWIN32_INCLUDE)
CDEFINES         = -D__WIN32OS2__ -D__WINE__ -D__i386__ -DTCPV40HDRS -DCOMCTL32UNDOC
CDEFINES_ODINCRT = -D__WIN32OS2__ -D__WINE__ -D__i386__
CDEFINES_WIN32APP= -D__WIN32OS2__ -D__i386__

!ifdef EXETARGET
!ifdef VIO
CFLAGS           += -bc
CXXFLAGS         += -bc
!else
CFLAGS           += -bg
CXXFLAGS         += -bg
!endif
!else
CFLAGS           += -bd
CXXFLAGS         += -bd
!endif


#
# Linker flags.
#
LDFLAGS          = option nodefaultlibs, maxe=25, q, symf
LDFLAGS_ODINCRT  = option maxe=25, q, symf

LD2FLAGS         = $(LDFLAGS)
LD2FLAGS_ODINCRT = $(LDFLAGS_ODINCRT)

